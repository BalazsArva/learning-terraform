# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  
variables:
  - group: AzureCredentials

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: ApplyTerraform
  displayName: Apply Terraform
  steps:
  - script: |
      mkdir terraform-download
      cd terraform-download
      wget https://releases.hashicorp.com/terraform/0.13.2/terraform_0.13.2_linux_amd64.zip
      unzip terraform_0.13.2_linux_amd64.zip
      rm /snap/bin/terraform
      cp terraform /snap/bin/terraform
    displayName: Download & install Terraform v0.13.2

  - script: terraform init
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
    displayName: 'Initialize Terraform'
    env:
      ARM_CLIENT_ID: '$(Azure.ClientId)'
      ARM_CLIENT_SECRET: '$(Azure.ClientSecret)'
      ARM_SUBSCRIPTION_ID: '$(Azure.SubscriptionId)'
      ARM_TENANT_ID: '$(Azure.TenantId)'
  
  - script: terraform apply -auto-approve
    workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
    displayName: 'Apply Terraform'
    env:
      ARM_CLIENT_ID: '$(Azure.ClientId)'
      ARM_CLIENT_SECRET: '$(Azure.ClientSecret)'
      ARM_SUBSCRIPTION_ID: '$(Azure.SubscriptionId)'
      ARM_TENANT_ID: '$(Azure.TenantId)'
